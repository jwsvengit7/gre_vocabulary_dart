name: gre_vocabulary
description: An application for practicing vocabularies for the GRE exam.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.19.0 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  flutter_hooks: ^0.18.0
  hooks_riverpod: ^2.2.0
  csv: ^5.0.1
  flutter_local_notifications: ^13.0.0
  hive: ^2.2.3
  hive_flutter: ^1.1.0
  path_provider: ^2.0.12
  url_launcher: ^6.1.8
  go_router: ^6.0.7
  dartz: ^0.10.1
  equatable: ^2.0.5
  string_extensions: ^0.6.8



  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.5
  freezed_annotation: ^2.2.0
  json_annotation: ^4.8.0
  isar: ^3.0.5
  isar_flutter_libs: ^3.0.5
  clock: ^1.1.1
  fake_async: ^1.3.1



dev_dependencies:
  flutter_test:
    sdk: flutter
  hive_generator: ^2.0.0
  mockito: ^5.3.2
  build_runner: ^2.3.3
  freezed: ^2.3.2
  json_serializable: ^6.6.0
  hive_test: ^1.0.1
  flutter_gen_runner:


  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.1
  isar_generator: ^3.0.5
# pubspec.yaml
# ...

flutter_gen:
  output: lib/gen/ # Optional (default: lib/gen/)
  line_length: 80 # Optional (default: 80)

  # Optional
  integrations:
    flutter_svg: true
    flare_flutter: true
    rive: true
    lottie: true



# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/csv/
    - assets/images/


  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
   - family: Axiforma
     fonts:
       - asset: assets/fonts/Axiforma/Axiforma-Black.ttf
         weight: 900
       - asset: assets/fonts/Axiforma/Axiforma-BlackItalic.ttf
         weight: 900
         style: italic
       - asset: assets/fonts/Axiforma/Axiforma-Heavy.ttf
         weight: 800
       - asset: assets/fonts/Axiforma/Axiforma-HeavyItalic.ttf
         weight: 800
         style: italic
       - asset: assets/fonts/Axiforma/Axiforma-Bold.ttf
         weight: 700
       - asset: assets/fonts/Axiforma/Axiforma-BoldItalic.ttf
         weight: 700
         style: italic
       - asset: assets/fonts/Axiforma/Axiforma-SemiBold.ttf
         weight: 600
       - asset: assets/fonts/Axiforma/Axiforma-SemiBoldItalic.ttf
         weight: 600
         style: italic
       - asset: assets/fonts/Axiforma/Axiforma-Medium.ttf
         weight: 500
       - asset: assets/fonts/Axiforma/Axiforma-MediumItalic.ttf
         weight: 500
         style: italic
       - asset: assets/fonts/Axiforma/Axiforma-Regular.ttf
         weight: 400
#       - asset: assets/fonts/Axiforma/Axiforma-RegularItalic.ttf
#         weight: 400
#         style: italic
       - asset: assets/fonts/Axiforma/Axiforma-Light.ttf
         weight: 300
       - asset: assets/fonts/Axiforma/Axiforma-LightItalic.ttf
         weight: 300
       - asset: assets/fonts/Axiforma/Axiforma-Thin.ttf
         weight: 200
       - asset: assets/fonts/Axiforma/Axiforma-ThinItalic.ttf
         weight: 200


  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages


